#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_6287082876705174730) {
   out_6287082876705174730[0] = 0;
   out_6287082876705174730[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_6287082876705174730[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_6287082876705174730[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_6287082876705174730[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_6287082876705174730[5] = -sin(in_vec[1]);
   out_6287082876705174730[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6287082876705174730[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6287082876705174730[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_6287082876705174730[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_6287082876705174730[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_6287082876705174730[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_6287082876705174730[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6287082876705174730[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6287082876705174730[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_6287082876705174730[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_6287082876705174730[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_6287082876705174730[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_6622887547268195339) {
   out_6622887547268195339[0] = delta_x[0] + nom_x[0];
   out_6622887547268195339[1] = delta_x[1] + nom_x[1];
   out_6622887547268195339[2] = delta_x[2] + nom_x[2];
   out_6622887547268195339[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_6622887547268195339[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_6622887547268195339[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_6622887547268195339[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_6622887547268195339[7] = delta_x[6] + nom_x[7];
   out_6622887547268195339[8] = delta_x[7] + nom_x[8];
   out_6622887547268195339[9] = delta_x[8] + nom_x[9];
   out_6622887547268195339[10] = delta_x[9] + nom_x[10];
   out_6622887547268195339[11] = delta_x[10] + nom_x[11];
   out_6622887547268195339[12] = delta_x[11] + nom_x[12];
   out_6622887547268195339[13] = delta_x[12] + nom_x[13];
   out_6622887547268195339[14] = delta_x[13] + nom_x[14];
   out_6622887547268195339[15] = delta_x[14] + nom_x[15];
   out_6622887547268195339[16] = delta_x[15] + nom_x[16];
   out_6622887547268195339[17] = delta_x[16] + nom_x[17];
   out_6622887547268195339[18] = delta_x[17] + nom_x[18];
   out_6622887547268195339[19] = delta_x[18] + nom_x[19];
   out_6622887547268195339[20] = delta_x[19] + nom_x[20];
   out_6622887547268195339[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_2469532870010074731) {
   out_2469532870010074731[0] = -nom_x[0] + true_x[0];
   out_2469532870010074731[1] = -nom_x[1] + true_x[1];
   out_2469532870010074731[2] = -nom_x[2] + true_x[2];
   out_2469532870010074731[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_2469532870010074731[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_2469532870010074731[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_2469532870010074731[6] = -nom_x[7] + true_x[7];
   out_2469532870010074731[7] = -nom_x[8] + true_x[8];
   out_2469532870010074731[8] = -nom_x[9] + true_x[9];
   out_2469532870010074731[9] = -nom_x[10] + true_x[10];
   out_2469532870010074731[10] = -nom_x[11] + true_x[11];
   out_2469532870010074731[11] = -nom_x[12] + true_x[12];
   out_2469532870010074731[12] = -nom_x[13] + true_x[13];
   out_2469532870010074731[13] = -nom_x[14] + true_x[14];
   out_2469532870010074731[14] = -nom_x[15] + true_x[15];
   out_2469532870010074731[15] = -nom_x[16] + true_x[16];
   out_2469532870010074731[16] = -nom_x[17] + true_x[17];
   out_2469532870010074731[17] = -nom_x[18] + true_x[18];
   out_2469532870010074731[18] = -nom_x[19] + true_x[19];
   out_2469532870010074731[19] = -nom_x[20] + true_x[20];
   out_2469532870010074731[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_1372219795177703307) {
   out_1372219795177703307[0] = 1.0;
   out_1372219795177703307[1] = 0;
   out_1372219795177703307[2] = 0;
   out_1372219795177703307[3] = 0;
   out_1372219795177703307[4] = 0;
   out_1372219795177703307[5] = 0;
   out_1372219795177703307[6] = 0;
   out_1372219795177703307[7] = 0;
   out_1372219795177703307[8] = 0;
   out_1372219795177703307[9] = 0;
   out_1372219795177703307[10] = 0;
   out_1372219795177703307[11] = 0;
   out_1372219795177703307[12] = 0;
   out_1372219795177703307[13] = 0;
   out_1372219795177703307[14] = 0;
   out_1372219795177703307[15] = 0;
   out_1372219795177703307[16] = 0;
   out_1372219795177703307[17] = 0;
   out_1372219795177703307[18] = 0;
   out_1372219795177703307[19] = 0;
   out_1372219795177703307[20] = 0;
   out_1372219795177703307[21] = 0;
   out_1372219795177703307[22] = 1.0;
   out_1372219795177703307[23] = 0;
   out_1372219795177703307[24] = 0;
   out_1372219795177703307[25] = 0;
   out_1372219795177703307[26] = 0;
   out_1372219795177703307[27] = 0;
   out_1372219795177703307[28] = 0;
   out_1372219795177703307[29] = 0;
   out_1372219795177703307[30] = 0;
   out_1372219795177703307[31] = 0;
   out_1372219795177703307[32] = 0;
   out_1372219795177703307[33] = 0;
   out_1372219795177703307[34] = 0;
   out_1372219795177703307[35] = 0;
   out_1372219795177703307[36] = 0;
   out_1372219795177703307[37] = 0;
   out_1372219795177703307[38] = 0;
   out_1372219795177703307[39] = 0;
   out_1372219795177703307[40] = 0;
   out_1372219795177703307[41] = 0;
   out_1372219795177703307[42] = 0;
   out_1372219795177703307[43] = 0;
   out_1372219795177703307[44] = 1.0;
   out_1372219795177703307[45] = 0;
   out_1372219795177703307[46] = 0;
   out_1372219795177703307[47] = 0;
   out_1372219795177703307[48] = 0;
   out_1372219795177703307[49] = 0;
   out_1372219795177703307[50] = 0;
   out_1372219795177703307[51] = 0;
   out_1372219795177703307[52] = 0;
   out_1372219795177703307[53] = 0;
   out_1372219795177703307[54] = 0;
   out_1372219795177703307[55] = 0;
   out_1372219795177703307[56] = 0;
   out_1372219795177703307[57] = 0;
   out_1372219795177703307[58] = 0;
   out_1372219795177703307[59] = 0;
   out_1372219795177703307[60] = 0;
   out_1372219795177703307[61] = 0;
   out_1372219795177703307[62] = 0;
   out_1372219795177703307[63] = 0;
   out_1372219795177703307[64] = 0;
   out_1372219795177703307[65] = 0;
   out_1372219795177703307[66] = -0.5*state[4];
   out_1372219795177703307[67] = -0.5*state[5];
   out_1372219795177703307[68] = -0.5*state[6];
   out_1372219795177703307[69] = 0;
   out_1372219795177703307[70] = 0;
   out_1372219795177703307[71] = 0;
   out_1372219795177703307[72] = 0;
   out_1372219795177703307[73] = 0;
   out_1372219795177703307[74] = 0;
   out_1372219795177703307[75] = 0;
   out_1372219795177703307[76] = 0;
   out_1372219795177703307[77] = 0;
   out_1372219795177703307[78] = 0;
   out_1372219795177703307[79] = 0;
   out_1372219795177703307[80] = 0;
   out_1372219795177703307[81] = 0;
   out_1372219795177703307[82] = 0;
   out_1372219795177703307[83] = 0;
   out_1372219795177703307[84] = 0;
   out_1372219795177703307[85] = 0;
   out_1372219795177703307[86] = 0;
   out_1372219795177703307[87] = 0.5*state[3];
   out_1372219795177703307[88] = 0.5*state[6];
   out_1372219795177703307[89] = -0.5*state[5];
   out_1372219795177703307[90] = 0;
   out_1372219795177703307[91] = 0;
   out_1372219795177703307[92] = 0;
   out_1372219795177703307[93] = 0;
   out_1372219795177703307[94] = 0;
   out_1372219795177703307[95] = 0;
   out_1372219795177703307[96] = 0;
   out_1372219795177703307[97] = 0;
   out_1372219795177703307[98] = 0;
   out_1372219795177703307[99] = 0;
   out_1372219795177703307[100] = 0;
   out_1372219795177703307[101] = 0;
   out_1372219795177703307[102] = 0;
   out_1372219795177703307[103] = 0;
   out_1372219795177703307[104] = 0;
   out_1372219795177703307[105] = 0;
   out_1372219795177703307[106] = 0;
   out_1372219795177703307[107] = 0;
   out_1372219795177703307[108] = -0.5*state[6];
   out_1372219795177703307[109] = 0.5*state[3];
   out_1372219795177703307[110] = 0.5*state[4];
   out_1372219795177703307[111] = 0;
   out_1372219795177703307[112] = 0;
   out_1372219795177703307[113] = 0;
   out_1372219795177703307[114] = 0;
   out_1372219795177703307[115] = 0;
   out_1372219795177703307[116] = 0;
   out_1372219795177703307[117] = 0;
   out_1372219795177703307[118] = 0;
   out_1372219795177703307[119] = 0;
   out_1372219795177703307[120] = 0;
   out_1372219795177703307[121] = 0;
   out_1372219795177703307[122] = 0;
   out_1372219795177703307[123] = 0;
   out_1372219795177703307[124] = 0;
   out_1372219795177703307[125] = 0;
   out_1372219795177703307[126] = 0;
   out_1372219795177703307[127] = 0;
   out_1372219795177703307[128] = 0;
   out_1372219795177703307[129] = 0.5*state[5];
   out_1372219795177703307[130] = -0.5*state[4];
   out_1372219795177703307[131] = 0.5*state[3];
   out_1372219795177703307[132] = 0;
   out_1372219795177703307[133] = 0;
   out_1372219795177703307[134] = 0;
   out_1372219795177703307[135] = 0;
   out_1372219795177703307[136] = 0;
   out_1372219795177703307[137] = 0;
   out_1372219795177703307[138] = 0;
   out_1372219795177703307[139] = 0;
   out_1372219795177703307[140] = 0;
   out_1372219795177703307[141] = 0;
   out_1372219795177703307[142] = 0;
   out_1372219795177703307[143] = 0;
   out_1372219795177703307[144] = 0;
   out_1372219795177703307[145] = 0;
   out_1372219795177703307[146] = 0;
   out_1372219795177703307[147] = 0;
   out_1372219795177703307[148] = 0;
   out_1372219795177703307[149] = 0;
   out_1372219795177703307[150] = 0;
   out_1372219795177703307[151] = 0;
   out_1372219795177703307[152] = 0;
   out_1372219795177703307[153] = 1.0;
   out_1372219795177703307[154] = 0;
   out_1372219795177703307[155] = 0;
   out_1372219795177703307[156] = 0;
   out_1372219795177703307[157] = 0;
   out_1372219795177703307[158] = 0;
   out_1372219795177703307[159] = 0;
   out_1372219795177703307[160] = 0;
   out_1372219795177703307[161] = 0;
   out_1372219795177703307[162] = 0;
   out_1372219795177703307[163] = 0;
   out_1372219795177703307[164] = 0;
   out_1372219795177703307[165] = 0;
   out_1372219795177703307[166] = 0;
   out_1372219795177703307[167] = 0;
   out_1372219795177703307[168] = 0;
   out_1372219795177703307[169] = 0;
   out_1372219795177703307[170] = 0;
   out_1372219795177703307[171] = 0;
   out_1372219795177703307[172] = 0;
   out_1372219795177703307[173] = 0;
   out_1372219795177703307[174] = 0;
   out_1372219795177703307[175] = 1.0;
   out_1372219795177703307[176] = 0;
   out_1372219795177703307[177] = 0;
   out_1372219795177703307[178] = 0;
   out_1372219795177703307[179] = 0;
   out_1372219795177703307[180] = 0;
   out_1372219795177703307[181] = 0;
   out_1372219795177703307[182] = 0;
   out_1372219795177703307[183] = 0;
   out_1372219795177703307[184] = 0;
   out_1372219795177703307[185] = 0;
   out_1372219795177703307[186] = 0;
   out_1372219795177703307[187] = 0;
   out_1372219795177703307[188] = 0;
   out_1372219795177703307[189] = 0;
   out_1372219795177703307[190] = 0;
   out_1372219795177703307[191] = 0;
   out_1372219795177703307[192] = 0;
   out_1372219795177703307[193] = 0;
   out_1372219795177703307[194] = 0;
   out_1372219795177703307[195] = 0;
   out_1372219795177703307[196] = 0;
   out_1372219795177703307[197] = 1.0;
   out_1372219795177703307[198] = 0;
   out_1372219795177703307[199] = 0;
   out_1372219795177703307[200] = 0;
   out_1372219795177703307[201] = 0;
   out_1372219795177703307[202] = 0;
   out_1372219795177703307[203] = 0;
   out_1372219795177703307[204] = 0;
   out_1372219795177703307[205] = 0;
   out_1372219795177703307[206] = 0;
   out_1372219795177703307[207] = 0;
   out_1372219795177703307[208] = 0;
   out_1372219795177703307[209] = 0;
   out_1372219795177703307[210] = 0;
   out_1372219795177703307[211] = 0;
   out_1372219795177703307[212] = 0;
   out_1372219795177703307[213] = 0;
   out_1372219795177703307[214] = 0;
   out_1372219795177703307[215] = 0;
   out_1372219795177703307[216] = 0;
   out_1372219795177703307[217] = 0;
   out_1372219795177703307[218] = 0;
   out_1372219795177703307[219] = 1.0;
   out_1372219795177703307[220] = 0;
   out_1372219795177703307[221] = 0;
   out_1372219795177703307[222] = 0;
   out_1372219795177703307[223] = 0;
   out_1372219795177703307[224] = 0;
   out_1372219795177703307[225] = 0;
   out_1372219795177703307[226] = 0;
   out_1372219795177703307[227] = 0;
   out_1372219795177703307[228] = 0;
   out_1372219795177703307[229] = 0;
   out_1372219795177703307[230] = 0;
   out_1372219795177703307[231] = 0;
   out_1372219795177703307[232] = 0;
   out_1372219795177703307[233] = 0;
   out_1372219795177703307[234] = 0;
   out_1372219795177703307[235] = 0;
   out_1372219795177703307[236] = 0;
   out_1372219795177703307[237] = 0;
   out_1372219795177703307[238] = 0;
   out_1372219795177703307[239] = 0;
   out_1372219795177703307[240] = 0;
   out_1372219795177703307[241] = 1.0;
   out_1372219795177703307[242] = 0;
   out_1372219795177703307[243] = 0;
   out_1372219795177703307[244] = 0;
   out_1372219795177703307[245] = 0;
   out_1372219795177703307[246] = 0;
   out_1372219795177703307[247] = 0;
   out_1372219795177703307[248] = 0;
   out_1372219795177703307[249] = 0;
   out_1372219795177703307[250] = 0;
   out_1372219795177703307[251] = 0;
   out_1372219795177703307[252] = 0;
   out_1372219795177703307[253] = 0;
   out_1372219795177703307[254] = 0;
   out_1372219795177703307[255] = 0;
   out_1372219795177703307[256] = 0;
   out_1372219795177703307[257] = 0;
   out_1372219795177703307[258] = 0;
   out_1372219795177703307[259] = 0;
   out_1372219795177703307[260] = 0;
   out_1372219795177703307[261] = 0;
   out_1372219795177703307[262] = 0;
   out_1372219795177703307[263] = 1.0;
   out_1372219795177703307[264] = 0;
   out_1372219795177703307[265] = 0;
   out_1372219795177703307[266] = 0;
   out_1372219795177703307[267] = 0;
   out_1372219795177703307[268] = 0;
   out_1372219795177703307[269] = 0;
   out_1372219795177703307[270] = 0;
   out_1372219795177703307[271] = 0;
   out_1372219795177703307[272] = 0;
   out_1372219795177703307[273] = 0;
   out_1372219795177703307[274] = 0;
   out_1372219795177703307[275] = 0;
   out_1372219795177703307[276] = 0;
   out_1372219795177703307[277] = 0;
   out_1372219795177703307[278] = 0;
   out_1372219795177703307[279] = 0;
   out_1372219795177703307[280] = 0;
   out_1372219795177703307[281] = 0;
   out_1372219795177703307[282] = 0;
   out_1372219795177703307[283] = 0;
   out_1372219795177703307[284] = 0;
   out_1372219795177703307[285] = 1.0;
   out_1372219795177703307[286] = 0;
   out_1372219795177703307[287] = 0;
   out_1372219795177703307[288] = 0;
   out_1372219795177703307[289] = 0;
   out_1372219795177703307[290] = 0;
   out_1372219795177703307[291] = 0;
   out_1372219795177703307[292] = 0;
   out_1372219795177703307[293] = 0;
   out_1372219795177703307[294] = 0;
   out_1372219795177703307[295] = 0;
   out_1372219795177703307[296] = 0;
   out_1372219795177703307[297] = 0;
   out_1372219795177703307[298] = 0;
   out_1372219795177703307[299] = 0;
   out_1372219795177703307[300] = 0;
   out_1372219795177703307[301] = 0;
   out_1372219795177703307[302] = 0;
   out_1372219795177703307[303] = 0;
   out_1372219795177703307[304] = 0;
   out_1372219795177703307[305] = 0;
   out_1372219795177703307[306] = 0;
   out_1372219795177703307[307] = 1.0;
   out_1372219795177703307[308] = 0;
   out_1372219795177703307[309] = 0;
   out_1372219795177703307[310] = 0;
   out_1372219795177703307[311] = 0;
   out_1372219795177703307[312] = 0;
   out_1372219795177703307[313] = 0;
   out_1372219795177703307[314] = 0;
   out_1372219795177703307[315] = 0;
   out_1372219795177703307[316] = 0;
   out_1372219795177703307[317] = 0;
   out_1372219795177703307[318] = 0;
   out_1372219795177703307[319] = 0;
   out_1372219795177703307[320] = 0;
   out_1372219795177703307[321] = 0;
   out_1372219795177703307[322] = 0;
   out_1372219795177703307[323] = 0;
   out_1372219795177703307[324] = 0;
   out_1372219795177703307[325] = 0;
   out_1372219795177703307[326] = 0;
   out_1372219795177703307[327] = 0;
   out_1372219795177703307[328] = 0;
   out_1372219795177703307[329] = 1.0;
   out_1372219795177703307[330] = 0;
   out_1372219795177703307[331] = 0;
   out_1372219795177703307[332] = 0;
   out_1372219795177703307[333] = 0;
   out_1372219795177703307[334] = 0;
   out_1372219795177703307[335] = 0;
   out_1372219795177703307[336] = 0;
   out_1372219795177703307[337] = 0;
   out_1372219795177703307[338] = 0;
   out_1372219795177703307[339] = 0;
   out_1372219795177703307[340] = 0;
   out_1372219795177703307[341] = 0;
   out_1372219795177703307[342] = 0;
   out_1372219795177703307[343] = 0;
   out_1372219795177703307[344] = 0;
   out_1372219795177703307[345] = 0;
   out_1372219795177703307[346] = 0;
   out_1372219795177703307[347] = 0;
   out_1372219795177703307[348] = 0;
   out_1372219795177703307[349] = 0;
   out_1372219795177703307[350] = 0;
   out_1372219795177703307[351] = 1.0;
   out_1372219795177703307[352] = 0;
   out_1372219795177703307[353] = 0;
   out_1372219795177703307[354] = 0;
   out_1372219795177703307[355] = 0;
   out_1372219795177703307[356] = 0;
   out_1372219795177703307[357] = 0;
   out_1372219795177703307[358] = 0;
   out_1372219795177703307[359] = 0;
   out_1372219795177703307[360] = 0;
   out_1372219795177703307[361] = 0;
   out_1372219795177703307[362] = 0;
   out_1372219795177703307[363] = 0;
   out_1372219795177703307[364] = 0;
   out_1372219795177703307[365] = 0;
   out_1372219795177703307[366] = 0;
   out_1372219795177703307[367] = 0;
   out_1372219795177703307[368] = 0;
   out_1372219795177703307[369] = 0;
   out_1372219795177703307[370] = 0;
   out_1372219795177703307[371] = 0;
   out_1372219795177703307[372] = 0;
   out_1372219795177703307[373] = 1.0;
   out_1372219795177703307[374] = 0;
   out_1372219795177703307[375] = 0;
   out_1372219795177703307[376] = 0;
   out_1372219795177703307[377] = 0;
   out_1372219795177703307[378] = 0;
   out_1372219795177703307[379] = 0;
   out_1372219795177703307[380] = 0;
   out_1372219795177703307[381] = 0;
   out_1372219795177703307[382] = 0;
   out_1372219795177703307[383] = 0;
   out_1372219795177703307[384] = 0;
   out_1372219795177703307[385] = 0;
   out_1372219795177703307[386] = 0;
   out_1372219795177703307[387] = 0;
   out_1372219795177703307[388] = 0;
   out_1372219795177703307[389] = 0;
   out_1372219795177703307[390] = 0;
   out_1372219795177703307[391] = 0;
   out_1372219795177703307[392] = 0;
   out_1372219795177703307[393] = 0;
   out_1372219795177703307[394] = 0;
   out_1372219795177703307[395] = 1.0;
   out_1372219795177703307[396] = 0;
   out_1372219795177703307[397] = 0;
   out_1372219795177703307[398] = 0;
   out_1372219795177703307[399] = 0;
   out_1372219795177703307[400] = 0;
   out_1372219795177703307[401] = 0;
   out_1372219795177703307[402] = 0;
   out_1372219795177703307[403] = 0;
   out_1372219795177703307[404] = 0;
   out_1372219795177703307[405] = 0;
   out_1372219795177703307[406] = 0;
   out_1372219795177703307[407] = 0;
   out_1372219795177703307[408] = 0;
   out_1372219795177703307[409] = 0;
   out_1372219795177703307[410] = 0;
   out_1372219795177703307[411] = 0;
   out_1372219795177703307[412] = 0;
   out_1372219795177703307[413] = 0;
   out_1372219795177703307[414] = 0;
   out_1372219795177703307[415] = 0;
   out_1372219795177703307[416] = 0;
   out_1372219795177703307[417] = 1.0;
   out_1372219795177703307[418] = 0;
   out_1372219795177703307[419] = 0;
   out_1372219795177703307[420] = 0;
   out_1372219795177703307[421] = 0;
   out_1372219795177703307[422] = 0;
   out_1372219795177703307[423] = 0;
   out_1372219795177703307[424] = 0;
   out_1372219795177703307[425] = 0;
   out_1372219795177703307[426] = 0;
   out_1372219795177703307[427] = 0;
   out_1372219795177703307[428] = 0;
   out_1372219795177703307[429] = 0;
   out_1372219795177703307[430] = 0;
   out_1372219795177703307[431] = 0;
   out_1372219795177703307[432] = 0;
   out_1372219795177703307[433] = 0;
   out_1372219795177703307[434] = 0;
   out_1372219795177703307[435] = 0;
   out_1372219795177703307[436] = 0;
   out_1372219795177703307[437] = 0;
   out_1372219795177703307[438] = 0;
   out_1372219795177703307[439] = 1.0;
   out_1372219795177703307[440] = 0;
   out_1372219795177703307[441] = 0;
   out_1372219795177703307[442] = 0;
   out_1372219795177703307[443] = 0;
   out_1372219795177703307[444] = 0;
   out_1372219795177703307[445] = 0;
   out_1372219795177703307[446] = 0;
   out_1372219795177703307[447] = 0;
   out_1372219795177703307[448] = 0;
   out_1372219795177703307[449] = 0;
   out_1372219795177703307[450] = 0;
   out_1372219795177703307[451] = 0;
   out_1372219795177703307[452] = 0;
   out_1372219795177703307[453] = 0;
   out_1372219795177703307[454] = 0;
   out_1372219795177703307[455] = 0;
   out_1372219795177703307[456] = 0;
   out_1372219795177703307[457] = 0;
   out_1372219795177703307[458] = 0;
   out_1372219795177703307[459] = 0;
   out_1372219795177703307[460] = 0;
   out_1372219795177703307[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_6471053790479580686) {
   out_6471053790479580686[0] = dt*state[7] + state[0];
   out_6471053790479580686[1] = dt*state[8] + state[1];
   out_6471053790479580686[2] = dt*state[9] + state[2];
   out_6471053790479580686[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_6471053790479580686[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_6471053790479580686[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_6471053790479580686[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_6471053790479580686[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_6471053790479580686[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_6471053790479580686[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_6471053790479580686[10] = state[10];
   out_6471053790479580686[11] = state[11];
   out_6471053790479580686[12] = state[12];
   out_6471053790479580686[13] = state[13];
   out_6471053790479580686[14] = state[14];
   out_6471053790479580686[15] = state[15];
   out_6471053790479580686[16] = state[16];
   out_6471053790479580686[17] = state[17];
   out_6471053790479580686[18] = state[18];
   out_6471053790479580686[19] = state[19];
   out_6471053790479580686[20] = state[20];
   out_6471053790479580686[21] = state[21];
}
void F_fun(double *state, double dt, double *out_8723779082052171387) {
   out_8723779082052171387[0] = 1;
   out_8723779082052171387[1] = 0;
   out_8723779082052171387[2] = 0;
   out_8723779082052171387[3] = 0;
   out_8723779082052171387[4] = 0;
   out_8723779082052171387[5] = 0;
   out_8723779082052171387[6] = dt;
   out_8723779082052171387[7] = 0;
   out_8723779082052171387[8] = 0;
   out_8723779082052171387[9] = 0;
   out_8723779082052171387[10] = 0;
   out_8723779082052171387[11] = 0;
   out_8723779082052171387[12] = 0;
   out_8723779082052171387[13] = 0;
   out_8723779082052171387[14] = 0;
   out_8723779082052171387[15] = 0;
   out_8723779082052171387[16] = 0;
   out_8723779082052171387[17] = 0;
   out_8723779082052171387[18] = 0;
   out_8723779082052171387[19] = 0;
   out_8723779082052171387[20] = 0;
   out_8723779082052171387[21] = 0;
   out_8723779082052171387[22] = 1;
   out_8723779082052171387[23] = 0;
   out_8723779082052171387[24] = 0;
   out_8723779082052171387[25] = 0;
   out_8723779082052171387[26] = 0;
   out_8723779082052171387[27] = 0;
   out_8723779082052171387[28] = dt;
   out_8723779082052171387[29] = 0;
   out_8723779082052171387[30] = 0;
   out_8723779082052171387[31] = 0;
   out_8723779082052171387[32] = 0;
   out_8723779082052171387[33] = 0;
   out_8723779082052171387[34] = 0;
   out_8723779082052171387[35] = 0;
   out_8723779082052171387[36] = 0;
   out_8723779082052171387[37] = 0;
   out_8723779082052171387[38] = 0;
   out_8723779082052171387[39] = 0;
   out_8723779082052171387[40] = 0;
   out_8723779082052171387[41] = 0;
   out_8723779082052171387[42] = 0;
   out_8723779082052171387[43] = 0;
   out_8723779082052171387[44] = 1;
   out_8723779082052171387[45] = 0;
   out_8723779082052171387[46] = 0;
   out_8723779082052171387[47] = 0;
   out_8723779082052171387[48] = 0;
   out_8723779082052171387[49] = 0;
   out_8723779082052171387[50] = dt;
   out_8723779082052171387[51] = 0;
   out_8723779082052171387[52] = 0;
   out_8723779082052171387[53] = 0;
   out_8723779082052171387[54] = 0;
   out_8723779082052171387[55] = 0;
   out_8723779082052171387[56] = 0;
   out_8723779082052171387[57] = 0;
   out_8723779082052171387[58] = 0;
   out_8723779082052171387[59] = 0;
   out_8723779082052171387[60] = 0;
   out_8723779082052171387[61] = 0;
   out_8723779082052171387[62] = 0;
   out_8723779082052171387[63] = 0;
   out_8723779082052171387[64] = 0;
   out_8723779082052171387[65] = 0;
   out_8723779082052171387[66] = 1;
   out_8723779082052171387[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8723779082052171387[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_8723779082052171387[69] = 0;
   out_8723779082052171387[70] = 0;
   out_8723779082052171387[71] = 0;
   out_8723779082052171387[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8723779082052171387[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8723779082052171387[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8723779082052171387[75] = 0;
   out_8723779082052171387[76] = 0;
   out_8723779082052171387[77] = 0;
   out_8723779082052171387[78] = 0;
   out_8723779082052171387[79] = 0;
   out_8723779082052171387[80] = 0;
   out_8723779082052171387[81] = 0;
   out_8723779082052171387[82] = 0;
   out_8723779082052171387[83] = 0;
   out_8723779082052171387[84] = 0;
   out_8723779082052171387[85] = 0;
   out_8723779082052171387[86] = 0;
   out_8723779082052171387[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8723779082052171387[88] = 1;
   out_8723779082052171387[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_8723779082052171387[90] = 0;
   out_8723779082052171387[91] = 0;
   out_8723779082052171387[92] = 0;
   out_8723779082052171387[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8723779082052171387[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8723779082052171387[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8723779082052171387[96] = 0;
   out_8723779082052171387[97] = 0;
   out_8723779082052171387[98] = 0;
   out_8723779082052171387[99] = 0;
   out_8723779082052171387[100] = 0;
   out_8723779082052171387[101] = 0;
   out_8723779082052171387[102] = 0;
   out_8723779082052171387[103] = 0;
   out_8723779082052171387[104] = 0;
   out_8723779082052171387[105] = 0;
   out_8723779082052171387[106] = 0;
   out_8723779082052171387[107] = 0;
   out_8723779082052171387[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_8723779082052171387[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_8723779082052171387[110] = 1;
   out_8723779082052171387[111] = 0;
   out_8723779082052171387[112] = 0;
   out_8723779082052171387[113] = 0;
   out_8723779082052171387[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8723779082052171387[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8723779082052171387[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8723779082052171387[117] = 0;
   out_8723779082052171387[118] = 0;
   out_8723779082052171387[119] = 0;
   out_8723779082052171387[120] = 0;
   out_8723779082052171387[121] = 0;
   out_8723779082052171387[122] = 0;
   out_8723779082052171387[123] = 0;
   out_8723779082052171387[124] = 0;
   out_8723779082052171387[125] = 0;
   out_8723779082052171387[126] = 0;
   out_8723779082052171387[127] = 0;
   out_8723779082052171387[128] = 0;
   out_8723779082052171387[129] = 0;
   out_8723779082052171387[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8723779082052171387[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_8723779082052171387[132] = 1;
   out_8723779082052171387[133] = 0;
   out_8723779082052171387[134] = 0;
   out_8723779082052171387[135] = 0;
   out_8723779082052171387[136] = 0;
   out_8723779082052171387[137] = 0;
   out_8723779082052171387[138] = 0;
   out_8723779082052171387[139] = 0;
   out_8723779082052171387[140] = 0;
   out_8723779082052171387[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8723779082052171387[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8723779082052171387[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8723779082052171387[144] = 0;
   out_8723779082052171387[145] = 0;
   out_8723779082052171387[146] = 0;
   out_8723779082052171387[147] = 0;
   out_8723779082052171387[148] = 0;
   out_8723779082052171387[149] = 0;
   out_8723779082052171387[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8723779082052171387[151] = 0;
   out_8723779082052171387[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_8723779082052171387[153] = 0;
   out_8723779082052171387[154] = 1;
   out_8723779082052171387[155] = 0;
   out_8723779082052171387[156] = 0;
   out_8723779082052171387[157] = 0;
   out_8723779082052171387[158] = 0;
   out_8723779082052171387[159] = 0;
   out_8723779082052171387[160] = 0;
   out_8723779082052171387[161] = 0;
   out_8723779082052171387[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8723779082052171387[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8723779082052171387[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8723779082052171387[165] = 0;
   out_8723779082052171387[166] = 0;
   out_8723779082052171387[167] = 0;
   out_8723779082052171387[168] = 0;
   out_8723779082052171387[169] = 0;
   out_8723779082052171387[170] = 0;
   out_8723779082052171387[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_8723779082052171387[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_8723779082052171387[173] = 0;
   out_8723779082052171387[174] = 0;
   out_8723779082052171387[175] = 0;
   out_8723779082052171387[176] = 1;
   out_8723779082052171387[177] = 0;
   out_8723779082052171387[178] = 0;
   out_8723779082052171387[179] = 0;
   out_8723779082052171387[180] = 0;
   out_8723779082052171387[181] = 0;
   out_8723779082052171387[182] = 0;
   out_8723779082052171387[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8723779082052171387[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8723779082052171387[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8723779082052171387[186] = 0;
   out_8723779082052171387[187] = 0;
   out_8723779082052171387[188] = 0;
   out_8723779082052171387[189] = 0;
   out_8723779082052171387[190] = 0;
   out_8723779082052171387[191] = 0;
   out_8723779082052171387[192] = 0;
   out_8723779082052171387[193] = 0;
   out_8723779082052171387[194] = 0;
   out_8723779082052171387[195] = 0;
   out_8723779082052171387[196] = 0;
   out_8723779082052171387[197] = 0;
   out_8723779082052171387[198] = 1;
   out_8723779082052171387[199] = 0;
   out_8723779082052171387[200] = 0;
   out_8723779082052171387[201] = 0;
   out_8723779082052171387[202] = 0;
   out_8723779082052171387[203] = 0;
   out_8723779082052171387[204] = 0;
   out_8723779082052171387[205] = 0;
   out_8723779082052171387[206] = 0;
   out_8723779082052171387[207] = 0;
   out_8723779082052171387[208] = 0;
   out_8723779082052171387[209] = 0;
   out_8723779082052171387[210] = 0;
   out_8723779082052171387[211] = 0;
   out_8723779082052171387[212] = 0;
   out_8723779082052171387[213] = 0;
   out_8723779082052171387[214] = 0;
   out_8723779082052171387[215] = 0;
   out_8723779082052171387[216] = 0;
   out_8723779082052171387[217] = 0;
   out_8723779082052171387[218] = 0;
   out_8723779082052171387[219] = 0;
   out_8723779082052171387[220] = 1;
   out_8723779082052171387[221] = 0;
   out_8723779082052171387[222] = 0;
   out_8723779082052171387[223] = 0;
   out_8723779082052171387[224] = 0;
   out_8723779082052171387[225] = 0;
   out_8723779082052171387[226] = 0;
   out_8723779082052171387[227] = 0;
   out_8723779082052171387[228] = 0;
   out_8723779082052171387[229] = 0;
   out_8723779082052171387[230] = 0;
   out_8723779082052171387[231] = 0;
   out_8723779082052171387[232] = 0;
   out_8723779082052171387[233] = 0;
   out_8723779082052171387[234] = 0;
   out_8723779082052171387[235] = 0;
   out_8723779082052171387[236] = 0;
   out_8723779082052171387[237] = 0;
   out_8723779082052171387[238] = 0;
   out_8723779082052171387[239] = 0;
   out_8723779082052171387[240] = 0;
   out_8723779082052171387[241] = 0;
   out_8723779082052171387[242] = 1;
   out_8723779082052171387[243] = 0;
   out_8723779082052171387[244] = 0;
   out_8723779082052171387[245] = 0;
   out_8723779082052171387[246] = 0;
   out_8723779082052171387[247] = 0;
   out_8723779082052171387[248] = 0;
   out_8723779082052171387[249] = 0;
   out_8723779082052171387[250] = 0;
   out_8723779082052171387[251] = 0;
   out_8723779082052171387[252] = 0;
   out_8723779082052171387[253] = 0;
   out_8723779082052171387[254] = 0;
   out_8723779082052171387[255] = 0;
   out_8723779082052171387[256] = 0;
   out_8723779082052171387[257] = 0;
   out_8723779082052171387[258] = 0;
   out_8723779082052171387[259] = 0;
   out_8723779082052171387[260] = 0;
   out_8723779082052171387[261] = 0;
   out_8723779082052171387[262] = 0;
   out_8723779082052171387[263] = 0;
   out_8723779082052171387[264] = 1;
   out_8723779082052171387[265] = 0;
   out_8723779082052171387[266] = 0;
   out_8723779082052171387[267] = 0;
   out_8723779082052171387[268] = 0;
   out_8723779082052171387[269] = 0;
   out_8723779082052171387[270] = 0;
   out_8723779082052171387[271] = 0;
   out_8723779082052171387[272] = 0;
   out_8723779082052171387[273] = 0;
   out_8723779082052171387[274] = 0;
   out_8723779082052171387[275] = 0;
   out_8723779082052171387[276] = 0;
   out_8723779082052171387[277] = 0;
   out_8723779082052171387[278] = 0;
   out_8723779082052171387[279] = 0;
   out_8723779082052171387[280] = 0;
   out_8723779082052171387[281] = 0;
   out_8723779082052171387[282] = 0;
   out_8723779082052171387[283] = 0;
   out_8723779082052171387[284] = 0;
   out_8723779082052171387[285] = 0;
   out_8723779082052171387[286] = 1;
   out_8723779082052171387[287] = 0;
   out_8723779082052171387[288] = 0;
   out_8723779082052171387[289] = 0;
   out_8723779082052171387[290] = 0;
   out_8723779082052171387[291] = 0;
   out_8723779082052171387[292] = 0;
   out_8723779082052171387[293] = 0;
   out_8723779082052171387[294] = 0;
   out_8723779082052171387[295] = 0;
   out_8723779082052171387[296] = 0;
   out_8723779082052171387[297] = 0;
   out_8723779082052171387[298] = 0;
   out_8723779082052171387[299] = 0;
   out_8723779082052171387[300] = 0;
   out_8723779082052171387[301] = 0;
   out_8723779082052171387[302] = 0;
   out_8723779082052171387[303] = 0;
   out_8723779082052171387[304] = 0;
   out_8723779082052171387[305] = 0;
   out_8723779082052171387[306] = 0;
   out_8723779082052171387[307] = 0;
   out_8723779082052171387[308] = 1;
   out_8723779082052171387[309] = 0;
   out_8723779082052171387[310] = 0;
   out_8723779082052171387[311] = 0;
   out_8723779082052171387[312] = 0;
   out_8723779082052171387[313] = 0;
   out_8723779082052171387[314] = 0;
   out_8723779082052171387[315] = 0;
   out_8723779082052171387[316] = 0;
   out_8723779082052171387[317] = 0;
   out_8723779082052171387[318] = 0;
   out_8723779082052171387[319] = 0;
   out_8723779082052171387[320] = 0;
   out_8723779082052171387[321] = 0;
   out_8723779082052171387[322] = 0;
   out_8723779082052171387[323] = 0;
   out_8723779082052171387[324] = 0;
   out_8723779082052171387[325] = 0;
   out_8723779082052171387[326] = 0;
   out_8723779082052171387[327] = 0;
   out_8723779082052171387[328] = 0;
   out_8723779082052171387[329] = 0;
   out_8723779082052171387[330] = 1;
   out_8723779082052171387[331] = 0;
   out_8723779082052171387[332] = 0;
   out_8723779082052171387[333] = 0;
   out_8723779082052171387[334] = 0;
   out_8723779082052171387[335] = 0;
   out_8723779082052171387[336] = 0;
   out_8723779082052171387[337] = 0;
   out_8723779082052171387[338] = 0;
   out_8723779082052171387[339] = 0;
   out_8723779082052171387[340] = 0;
   out_8723779082052171387[341] = 0;
   out_8723779082052171387[342] = 0;
   out_8723779082052171387[343] = 0;
   out_8723779082052171387[344] = 0;
   out_8723779082052171387[345] = 0;
   out_8723779082052171387[346] = 0;
   out_8723779082052171387[347] = 0;
   out_8723779082052171387[348] = 0;
   out_8723779082052171387[349] = 0;
   out_8723779082052171387[350] = 0;
   out_8723779082052171387[351] = 0;
   out_8723779082052171387[352] = 1;
   out_8723779082052171387[353] = 0;
   out_8723779082052171387[354] = 0;
   out_8723779082052171387[355] = 0;
   out_8723779082052171387[356] = 0;
   out_8723779082052171387[357] = 0;
   out_8723779082052171387[358] = 0;
   out_8723779082052171387[359] = 0;
   out_8723779082052171387[360] = 0;
   out_8723779082052171387[361] = 0;
   out_8723779082052171387[362] = 0;
   out_8723779082052171387[363] = 0;
   out_8723779082052171387[364] = 0;
   out_8723779082052171387[365] = 0;
   out_8723779082052171387[366] = 0;
   out_8723779082052171387[367] = 0;
   out_8723779082052171387[368] = 0;
   out_8723779082052171387[369] = 0;
   out_8723779082052171387[370] = 0;
   out_8723779082052171387[371] = 0;
   out_8723779082052171387[372] = 0;
   out_8723779082052171387[373] = 0;
   out_8723779082052171387[374] = 1;
   out_8723779082052171387[375] = 0;
   out_8723779082052171387[376] = 0;
   out_8723779082052171387[377] = 0;
   out_8723779082052171387[378] = 0;
   out_8723779082052171387[379] = 0;
   out_8723779082052171387[380] = 0;
   out_8723779082052171387[381] = 0;
   out_8723779082052171387[382] = 0;
   out_8723779082052171387[383] = 0;
   out_8723779082052171387[384] = 0;
   out_8723779082052171387[385] = 0;
   out_8723779082052171387[386] = 0;
   out_8723779082052171387[387] = 0;
   out_8723779082052171387[388] = 0;
   out_8723779082052171387[389] = 0;
   out_8723779082052171387[390] = 0;
   out_8723779082052171387[391] = 0;
   out_8723779082052171387[392] = 0;
   out_8723779082052171387[393] = 0;
   out_8723779082052171387[394] = 0;
   out_8723779082052171387[395] = 0;
   out_8723779082052171387[396] = 1;
   out_8723779082052171387[397] = 0;
   out_8723779082052171387[398] = 0;
   out_8723779082052171387[399] = 0;
   out_8723779082052171387[400] = 0;
   out_8723779082052171387[401] = 0;
   out_8723779082052171387[402] = 0;
   out_8723779082052171387[403] = 0;
   out_8723779082052171387[404] = 0;
   out_8723779082052171387[405] = 0;
   out_8723779082052171387[406] = 0;
   out_8723779082052171387[407] = 0;
   out_8723779082052171387[408] = 0;
   out_8723779082052171387[409] = 0;
   out_8723779082052171387[410] = 0;
   out_8723779082052171387[411] = 0;
   out_8723779082052171387[412] = 0;
   out_8723779082052171387[413] = 0;
   out_8723779082052171387[414] = 0;
   out_8723779082052171387[415] = 0;
   out_8723779082052171387[416] = 0;
   out_8723779082052171387[417] = 0;
   out_8723779082052171387[418] = 1;
   out_8723779082052171387[419] = 0;
   out_8723779082052171387[420] = 0;
   out_8723779082052171387[421] = 0;
   out_8723779082052171387[422] = 0;
   out_8723779082052171387[423] = 0;
   out_8723779082052171387[424] = 0;
   out_8723779082052171387[425] = 0;
   out_8723779082052171387[426] = 0;
   out_8723779082052171387[427] = 0;
   out_8723779082052171387[428] = 0;
   out_8723779082052171387[429] = 0;
   out_8723779082052171387[430] = 0;
   out_8723779082052171387[431] = 0;
   out_8723779082052171387[432] = 0;
   out_8723779082052171387[433] = 0;
   out_8723779082052171387[434] = 0;
   out_8723779082052171387[435] = 0;
   out_8723779082052171387[436] = 0;
   out_8723779082052171387[437] = 0;
   out_8723779082052171387[438] = 0;
   out_8723779082052171387[439] = 0;
   out_8723779082052171387[440] = 1;
}
void h_4(double *state, double *unused, double *out_602150755429471006) {
   out_602150755429471006[0] = state[10] + state[13];
   out_602150755429471006[1] = state[11] + state[14];
   out_602150755429471006[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_1181153021740974696) {
   out_1181153021740974696[0] = 0;
   out_1181153021740974696[1] = 0;
   out_1181153021740974696[2] = 0;
   out_1181153021740974696[3] = 0;
   out_1181153021740974696[4] = 0;
   out_1181153021740974696[5] = 0;
   out_1181153021740974696[6] = 0;
   out_1181153021740974696[7] = 0;
   out_1181153021740974696[8] = 0;
   out_1181153021740974696[9] = 0;
   out_1181153021740974696[10] = 1;
   out_1181153021740974696[11] = 0;
   out_1181153021740974696[12] = 0;
   out_1181153021740974696[13] = 1;
   out_1181153021740974696[14] = 0;
   out_1181153021740974696[15] = 0;
   out_1181153021740974696[16] = 0;
   out_1181153021740974696[17] = 0;
   out_1181153021740974696[18] = 0;
   out_1181153021740974696[19] = 0;
   out_1181153021740974696[20] = 0;
   out_1181153021740974696[21] = 0;
   out_1181153021740974696[22] = 0;
   out_1181153021740974696[23] = 0;
   out_1181153021740974696[24] = 0;
   out_1181153021740974696[25] = 0;
   out_1181153021740974696[26] = 0;
   out_1181153021740974696[27] = 0;
   out_1181153021740974696[28] = 0;
   out_1181153021740974696[29] = 0;
   out_1181153021740974696[30] = 0;
   out_1181153021740974696[31] = 0;
   out_1181153021740974696[32] = 0;
   out_1181153021740974696[33] = 1;
   out_1181153021740974696[34] = 0;
   out_1181153021740974696[35] = 0;
   out_1181153021740974696[36] = 1;
   out_1181153021740974696[37] = 0;
   out_1181153021740974696[38] = 0;
   out_1181153021740974696[39] = 0;
   out_1181153021740974696[40] = 0;
   out_1181153021740974696[41] = 0;
   out_1181153021740974696[42] = 0;
   out_1181153021740974696[43] = 0;
   out_1181153021740974696[44] = 0;
   out_1181153021740974696[45] = 0;
   out_1181153021740974696[46] = 0;
   out_1181153021740974696[47] = 0;
   out_1181153021740974696[48] = 0;
   out_1181153021740974696[49] = 0;
   out_1181153021740974696[50] = 0;
   out_1181153021740974696[51] = 0;
   out_1181153021740974696[52] = 0;
   out_1181153021740974696[53] = 0;
   out_1181153021740974696[54] = 0;
   out_1181153021740974696[55] = 0;
   out_1181153021740974696[56] = 1;
   out_1181153021740974696[57] = 0;
   out_1181153021740974696[58] = 0;
   out_1181153021740974696[59] = 1;
   out_1181153021740974696[60] = 0;
   out_1181153021740974696[61] = 0;
   out_1181153021740974696[62] = 0;
   out_1181153021740974696[63] = 0;
   out_1181153021740974696[64] = 0;
   out_1181153021740974696[65] = 0;
}
void h_9(double *state, double *unused, double *out_8053080118545079418) {
   out_8053080118545079418[0] = state[10];
   out_8053080118545079418[1] = state[11];
   out_8053080118545079418[2] = state[12];
}
void H_9(double *state, double *unused, double *out_6106065913523472774) {
   out_6106065913523472774[0] = 0;
   out_6106065913523472774[1] = 0;
   out_6106065913523472774[2] = 0;
   out_6106065913523472774[3] = 0;
   out_6106065913523472774[4] = 0;
   out_6106065913523472774[5] = 0;
   out_6106065913523472774[6] = 0;
   out_6106065913523472774[7] = 0;
   out_6106065913523472774[8] = 0;
   out_6106065913523472774[9] = 0;
   out_6106065913523472774[10] = 1;
   out_6106065913523472774[11] = 0;
   out_6106065913523472774[12] = 0;
   out_6106065913523472774[13] = 0;
   out_6106065913523472774[14] = 0;
   out_6106065913523472774[15] = 0;
   out_6106065913523472774[16] = 0;
   out_6106065913523472774[17] = 0;
   out_6106065913523472774[18] = 0;
   out_6106065913523472774[19] = 0;
   out_6106065913523472774[20] = 0;
   out_6106065913523472774[21] = 0;
   out_6106065913523472774[22] = 0;
   out_6106065913523472774[23] = 0;
   out_6106065913523472774[24] = 0;
   out_6106065913523472774[25] = 0;
   out_6106065913523472774[26] = 0;
   out_6106065913523472774[27] = 0;
   out_6106065913523472774[28] = 0;
   out_6106065913523472774[29] = 0;
   out_6106065913523472774[30] = 0;
   out_6106065913523472774[31] = 0;
   out_6106065913523472774[32] = 0;
   out_6106065913523472774[33] = 1;
   out_6106065913523472774[34] = 0;
   out_6106065913523472774[35] = 0;
   out_6106065913523472774[36] = 0;
   out_6106065913523472774[37] = 0;
   out_6106065913523472774[38] = 0;
   out_6106065913523472774[39] = 0;
   out_6106065913523472774[40] = 0;
   out_6106065913523472774[41] = 0;
   out_6106065913523472774[42] = 0;
   out_6106065913523472774[43] = 0;
   out_6106065913523472774[44] = 0;
   out_6106065913523472774[45] = 0;
   out_6106065913523472774[46] = 0;
   out_6106065913523472774[47] = 0;
   out_6106065913523472774[48] = 0;
   out_6106065913523472774[49] = 0;
   out_6106065913523472774[50] = 0;
   out_6106065913523472774[51] = 0;
   out_6106065913523472774[52] = 0;
   out_6106065913523472774[53] = 0;
   out_6106065913523472774[54] = 0;
   out_6106065913523472774[55] = 0;
   out_6106065913523472774[56] = 1;
   out_6106065913523472774[57] = 0;
   out_6106065913523472774[58] = 0;
   out_6106065913523472774[59] = 0;
   out_6106065913523472774[60] = 0;
   out_6106065913523472774[61] = 0;
   out_6106065913523472774[62] = 0;
   out_6106065913523472774[63] = 0;
   out_6106065913523472774[64] = 0;
   out_6106065913523472774[65] = 0;
}
void h_10(double *state, double *unused, double *out_8952859443434322822) {
   out_8952859443434322822[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_8952859443434322822[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_8952859443434322822[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_8116439110641593908) {
   out_8116439110641593908[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8116439110641593908[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8116439110641593908[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_8116439110641593908[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8116439110641593908[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8116439110641593908[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8116439110641593908[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8116439110641593908[7] = 0;
   out_8116439110641593908[8] = 0;
   out_8116439110641593908[9] = 0;
   out_8116439110641593908[10] = 0;
   out_8116439110641593908[11] = 0;
   out_8116439110641593908[12] = 0;
   out_8116439110641593908[13] = 0;
   out_8116439110641593908[14] = 0;
   out_8116439110641593908[15] = 0;
   out_8116439110641593908[16] = 1;
   out_8116439110641593908[17] = 0;
   out_8116439110641593908[18] = 0;
   out_8116439110641593908[19] = 1;
   out_8116439110641593908[20] = 0;
   out_8116439110641593908[21] = 0;
   out_8116439110641593908[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8116439110641593908[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8116439110641593908[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_8116439110641593908[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8116439110641593908[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8116439110641593908[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8116439110641593908[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8116439110641593908[29] = 0;
   out_8116439110641593908[30] = 0;
   out_8116439110641593908[31] = 0;
   out_8116439110641593908[32] = 0;
   out_8116439110641593908[33] = 0;
   out_8116439110641593908[34] = 0;
   out_8116439110641593908[35] = 0;
   out_8116439110641593908[36] = 0;
   out_8116439110641593908[37] = 0;
   out_8116439110641593908[38] = 0;
   out_8116439110641593908[39] = 1;
   out_8116439110641593908[40] = 0;
   out_8116439110641593908[41] = 0;
   out_8116439110641593908[42] = 1;
   out_8116439110641593908[43] = 0;
   out_8116439110641593908[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_8116439110641593908[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_8116439110641593908[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8116439110641593908[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8116439110641593908[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8116439110641593908[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8116439110641593908[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8116439110641593908[51] = 0;
   out_8116439110641593908[52] = 0;
   out_8116439110641593908[53] = 0;
   out_8116439110641593908[54] = 0;
   out_8116439110641593908[55] = 0;
   out_8116439110641593908[56] = 0;
   out_8116439110641593908[57] = 0;
   out_8116439110641593908[58] = 0;
   out_8116439110641593908[59] = 0;
   out_8116439110641593908[60] = 0;
   out_8116439110641593908[61] = 0;
   out_8116439110641593908[62] = 1;
   out_8116439110641593908[63] = 0;
   out_8116439110641593908[64] = 0;
   out_8116439110641593908[65] = 1;
}
void h_12(double *state, double *unused, double *out_5876765162710571962) {
   out_5876765162710571962[0] = state[0];
   out_5876765162710571962[1] = state[1];
   out_5876765162710571962[2] = state[2];
}
void H_12(double *state, double *unused, double *out_7562411398783707692) {
   out_7562411398783707692[0] = 1;
   out_7562411398783707692[1] = 0;
   out_7562411398783707692[2] = 0;
   out_7562411398783707692[3] = 0;
   out_7562411398783707692[4] = 0;
   out_7562411398783707692[5] = 0;
   out_7562411398783707692[6] = 0;
   out_7562411398783707692[7] = 0;
   out_7562411398783707692[8] = 0;
   out_7562411398783707692[9] = 0;
   out_7562411398783707692[10] = 0;
   out_7562411398783707692[11] = 0;
   out_7562411398783707692[12] = 0;
   out_7562411398783707692[13] = 0;
   out_7562411398783707692[14] = 0;
   out_7562411398783707692[15] = 0;
   out_7562411398783707692[16] = 0;
   out_7562411398783707692[17] = 0;
   out_7562411398783707692[18] = 0;
   out_7562411398783707692[19] = 0;
   out_7562411398783707692[20] = 0;
   out_7562411398783707692[21] = 0;
   out_7562411398783707692[22] = 0;
   out_7562411398783707692[23] = 1;
   out_7562411398783707692[24] = 0;
   out_7562411398783707692[25] = 0;
   out_7562411398783707692[26] = 0;
   out_7562411398783707692[27] = 0;
   out_7562411398783707692[28] = 0;
   out_7562411398783707692[29] = 0;
   out_7562411398783707692[30] = 0;
   out_7562411398783707692[31] = 0;
   out_7562411398783707692[32] = 0;
   out_7562411398783707692[33] = 0;
   out_7562411398783707692[34] = 0;
   out_7562411398783707692[35] = 0;
   out_7562411398783707692[36] = 0;
   out_7562411398783707692[37] = 0;
   out_7562411398783707692[38] = 0;
   out_7562411398783707692[39] = 0;
   out_7562411398783707692[40] = 0;
   out_7562411398783707692[41] = 0;
   out_7562411398783707692[42] = 0;
   out_7562411398783707692[43] = 0;
   out_7562411398783707692[44] = 0;
   out_7562411398783707692[45] = 0;
   out_7562411398783707692[46] = 1;
   out_7562411398783707692[47] = 0;
   out_7562411398783707692[48] = 0;
   out_7562411398783707692[49] = 0;
   out_7562411398783707692[50] = 0;
   out_7562411398783707692[51] = 0;
   out_7562411398783707692[52] = 0;
   out_7562411398783707692[53] = 0;
   out_7562411398783707692[54] = 0;
   out_7562411398783707692[55] = 0;
   out_7562411398783707692[56] = 0;
   out_7562411398783707692[57] = 0;
   out_7562411398783707692[58] = 0;
   out_7562411398783707692[59] = 0;
   out_7562411398783707692[60] = 0;
   out_7562411398783707692[61] = 0;
   out_7562411398783707692[62] = 0;
   out_7562411398783707692[63] = 0;
   out_7562411398783707692[64] = 0;
   out_7562411398783707692[65] = 0;
}
void h_35(double *state, double *unused, double *out_8882447461541958668) {
   out_8882447461541958668[0] = state[7];
   out_8882447461541958668[1] = state[8];
   out_8882447461541958668[2] = state[9];
}
void H_35(double *state, double *unused, double *out_9215205749443062111) {
   out_9215205749443062111[0] = 0;
   out_9215205749443062111[1] = 0;
   out_9215205749443062111[2] = 0;
   out_9215205749443062111[3] = 0;
   out_9215205749443062111[4] = 0;
   out_9215205749443062111[5] = 0;
   out_9215205749443062111[6] = 0;
   out_9215205749443062111[7] = 1;
   out_9215205749443062111[8] = 0;
   out_9215205749443062111[9] = 0;
   out_9215205749443062111[10] = 0;
   out_9215205749443062111[11] = 0;
   out_9215205749443062111[12] = 0;
   out_9215205749443062111[13] = 0;
   out_9215205749443062111[14] = 0;
   out_9215205749443062111[15] = 0;
   out_9215205749443062111[16] = 0;
   out_9215205749443062111[17] = 0;
   out_9215205749443062111[18] = 0;
   out_9215205749443062111[19] = 0;
   out_9215205749443062111[20] = 0;
   out_9215205749443062111[21] = 0;
   out_9215205749443062111[22] = 0;
   out_9215205749443062111[23] = 0;
   out_9215205749443062111[24] = 0;
   out_9215205749443062111[25] = 0;
   out_9215205749443062111[26] = 0;
   out_9215205749443062111[27] = 0;
   out_9215205749443062111[28] = 0;
   out_9215205749443062111[29] = 0;
   out_9215205749443062111[30] = 1;
   out_9215205749443062111[31] = 0;
   out_9215205749443062111[32] = 0;
   out_9215205749443062111[33] = 0;
   out_9215205749443062111[34] = 0;
   out_9215205749443062111[35] = 0;
   out_9215205749443062111[36] = 0;
   out_9215205749443062111[37] = 0;
   out_9215205749443062111[38] = 0;
   out_9215205749443062111[39] = 0;
   out_9215205749443062111[40] = 0;
   out_9215205749443062111[41] = 0;
   out_9215205749443062111[42] = 0;
   out_9215205749443062111[43] = 0;
   out_9215205749443062111[44] = 0;
   out_9215205749443062111[45] = 0;
   out_9215205749443062111[46] = 0;
   out_9215205749443062111[47] = 0;
   out_9215205749443062111[48] = 0;
   out_9215205749443062111[49] = 0;
   out_9215205749443062111[50] = 0;
   out_9215205749443062111[51] = 0;
   out_9215205749443062111[52] = 0;
   out_9215205749443062111[53] = 1;
   out_9215205749443062111[54] = 0;
   out_9215205749443062111[55] = 0;
   out_9215205749443062111[56] = 0;
   out_9215205749443062111[57] = 0;
   out_9215205749443062111[58] = 0;
   out_9215205749443062111[59] = 0;
   out_9215205749443062111[60] = 0;
   out_9215205749443062111[61] = 0;
   out_9215205749443062111[62] = 0;
   out_9215205749443062111[63] = 0;
   out_9215205749443062111[64] = 0;
   out_9215205749443062111[65] = 0;
}
void h_32(double *state, double *unused, double *out_4113087374974639312) {
   out_4113087374974639312[0] = state[3];
   out_4113087374974639312[1] = state[4];
   out_4113087374974639312[2] = state[5];
   out_4113087374974639312[3] = state[6];
}
void H_32(double *state, double *unused, double *out_2033190202040276390) {
   out_2033190202040276390[0] = 0;
   out_2033190202040276390[1] = 0;
   out_2033190202040276390[2] = 0;
   out_2033190202040276390[3] = 1;
   out_2033190202040276390[4] = 0;
   out_2033190202040276390[5] = 0;
   out_2033190202040276390[6] = 0;
   out_2033190202040276390[7] = 0;
   out_2033190202040276390[8] = 0;
   out_2033190202040276390[9] = 0;
   out_2033190202040276390[10] = 0;
   out_2033190202040276390[11] = 0;
   out_2033190202040276390[12] = 0;
   out_2033190202040276390[13] = 0;
   out_2033190202040276390[14] = 0;
   out_2033190202040276390[15] = 0;
   out_2033190202040276390[16] = 0;
   out_2033190202040276390[17] = 0;
   out_2033190202040276390[18] = 0;
   out_2033190202040276390[19] = 0;
   out_2033190202040276390[20] = 0;
   out_2033190202040276390[21] = 0;
   out_2033190202040276390[22] = 0;
   out_2033190202040276390[23] = 0;
   out_2033190202040276390[24] = 0;
   out_2033190202040276390[25] = 0;
   out_2033190202040276390[26] = 1;
   out_2033190202040276390[27] = 0;
   out_2033190202040276390[28] = 0;
   out_2033190202040276390[29] = 0;
   out_2033190202040276390[30] = 0;
   out_2033190202040276390[31] = 0;
   out_2033190202040276390[32] = 0;
   out_2033190202040276390[33] = 0;
   out_2033190202040276390[34] = 0;
   out_2033190202040276390[35] = 0;
   out_2033190202040276390[36] = 0;
   out_2033190202040276390[37] = 0;
   out_2033190202040276390[38] = 0;
   out_2033190202040276390[39] = 0;
   out_2033190202040276390[40] = 0;
   out_2033190202040276390[41] = 0;
   out_2033190202040276390[42] = 0;
   out_2033190202040276390[43] = 0;
   out_2033190202040276390[44] = 0;
   out_2033190202040276390[45] = 0;
   out_2033190202040276390[46] = 0;
   out_2033190202040276390[47] = 0;
   out_2033190202040276390[48] = 0;
   out_2033190202040276390[49] = 1;
   out_2033190202040276390[50] = 0;
   out_2033190202040276390[51] = 0;
   out_2033190202040276390[52] = 0;
   out_2033190202040276390[53] = 0;
   out_2033190202040276390[54] = 0;
   out_2033190202040276390[55] = 0;
   out_2033190202040276390[56] = 0;
   out_2033190202040276390[57] = 0;
   out_2033190202040276390[58] = 0;
   out_2033190202040276390[59] = 0;
   out_2033190202040276390[60] = 0;
   out_2033190202040276390[61] = 0;
   out_2033190202040276390[62] = 0;
   out_2033190202040276390[63] = 0;
   out_2033190202040276390[64] = 0;
   out_2033190202040276390[65] = 0;
   out_2033190202040276390[66] = 0;
   out_2033190202040276390[67] = 0;
   out_2033190202040276390[68] = 0;
   out_2033190202040276390[69] = 0;
   out_2033190202040276390[70] = 0;
   out_2033190202040276390[71] = 0;
   out_2033190202040276390[72] = 1;
   out_2033190202040276390[73] = 0;
   out_2033190202040276390[74] = 0;
   out_2033190202040276390[75] = 0;
   out_2033190202040276390[76] = 0;
   out_2033190202040276390[77] = 0;
   out_2033190202040276390[78] = 0;
   out_2033190202040276390[79] = 0;
   out_2033190202040276390[80] = 0;
   out_2033190202040276390[81] = 0;
   out_2033190202040276390[82] = 0;
   out_2033190202040276390[83] = 0;
   out_2033190202040276390[84] = 0;
   out_2033190202040276390[85] = 0;
   out_2033190202040276390[86] = 0;
   out_2033190202040276390[87] = 0;
}
void h_13(double *state, double *unused, double *out_9058530126902937662) {
   out_9058530126902937662[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_9058530126902937662[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_9058530126902937662[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_2889039755446710196) {
   out_2889039755446710196[0] = 0;
   out_2889039755446710196[1] = 0;
   out_2889039755446710196[2] = 0;
   out_2889039755446710196[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2889039755446710196[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2889039755446710196[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_2889039755446710196[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2889039755446710196[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_2889039755446710196[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_2889039755446710196[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_2889039755446710196[10] = 0;
   out_2889039755446710196[11] = 0;
   out_2889039755446710196[12] = 0;
   out_2889039755446710196[13] = 0;
   out_2889039755446710196[14] = 0;
   out_2889039755446710196[15] = 0;
   out_2889039755446710196[16] = 0;
   out_2889039755446710196[17] = 0;
   out_2889039755446710196[18] = 0;
   out_2889039755446710196[19] = 0;
   out_2889039755446710196[20] = 0;
   out_2889039755446710196[21] = 0;
   out_2889039755446710196[22] = 0;
   out_2889039755446710196[23] = 0;
   out_2889039755446710196[24] = 0;
   out_2889039755446710196[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2889039755446710196[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2889039755446710196[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2889039755446710196[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_2889039755446710196[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_2889039755446710196[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_2889039755446710196[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_2889039755446710196[32] = 0;
   out_2889039755446710196[33] = 0;
   out_2889039755446710196[34] = 0;
   out_2889039755446710196[35] = 0;
   out_2889039755446710196[36] = 0;
   out_2889039755446710196[37] = 0;
   out_2889039755446710196[38] = 0;
   out_2889039755446710196[39] = 0;
   out_2889039755446710196[40] = 0;
   out_2889039755446710196[41] = 0;
   out_2889039755446710196[42] = 0;
   out_2889039755446710196[43] = 0;
   out_2889039755446710196[44] = 0;
   out_2889039755446710196[45] = 0;
   out_2889039755446710196[46] = 0;
   out_2889039755446710196[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2889039755446710196[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_2889039755446710196[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2889039755446710196[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2889039755446710196[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_2889039755446710196[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_2889039755446710196[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_2889039755446710196[54] = 0;
   out_2889039755446710196[55] = 0;
   out_2889039755446710196[56] = 0;
   out_2889039755446710196[57] = 0;
   out_2889039755446710196[58] = 0;
   out_2889039755446710196[59] = 0;
   out_2889039755446710196[60] = 0;
   out_2889039755446710196[61] = 0;
   out_2889039755446710196[62] = 0;
   out_2889039755446710196[63] = 0;
   out_2889039755446710196[64] = 0;
   out_2889039755446710196[65] = 0;
}
void h_14(double *state, double *unused, double *out_8053080118545079418) {
   out_8053080118545079418[0] = state[10];
   out_8053080118545079418[1] = state[11];
   out_8053080118545079418[2] = state[12];
}
void H_14(double *state, double *unused, double *out_6106065913523472774) {
   out_6106065913523472774[0] = 0;
   out_6106065913523472774[1] = 0;
   out_6106065913523472774[2] = 0;
   out_6106065913523472774[3] = 0;
   out_6106065913523472774[4] = 0;
   out_6106065913523472774[5] = 0;
   out_6106065913523472774[6] = 0;
   out_6106065913523472774[7] = 0;
   out_6106065913523472774[8] = 0;
   out_6106065913523472774[9] = 0;
   out_6106065913523472774[10] = 1;
   out_6106065913523472774[11] = 0;
   out_6106065913523472774[12] = 0;
   out_6106065913523472774[13] = 0;
   out_6106065913523472774[14] = 0;
   out_6106065913523472774[15] = 0;
   out_6106065913523472774[16] = 0;
   out_6106065913523472774[17] = 0;
   out_6106065913523472774[18] = 0;
   out_6106065913523472774[19] = 0;
   out_6106065913523472774[20] = 0;
   out_6106065913523472774[21] = 0;
   out_6106065913523472774[22] = 0;
   out_6106065913523472774[23] = 0;
   out_6106065913523472774[24] = 0;
   out_6106065913523472774[25] = 0;
   out_6106065913523472774[26] = 0;
   out_6106065913523472774[27] = 0;
   out_6106065913523472774[28] = 0;
   out_6106065913523472774[29] = 0;
   out_6106065913523472774[30] = 0;
   out_6106065913523472774[31] = 0;
   out_6106065913523472774[32] = 0;
   out_6106065913523472774[33] = 1;
   out_6106065913523472774[34] = 0;
   out_6106065913523472774[35] = 0;
   out_6106065913523472774[36] = 0;
   out_6106065913523472774[37] = 0;
   out_6106065913523472774[38] = 0;
   out_6106065913523472774[39] = 0;
   out_6106065913523472774[40] = 0;
   out_6106065913523472774[41] = 0;
   out_6106065913523472774[42] = 0;
   out_6106065913523472774[43] = 0;
   out_6106065913523472774[44] = 0;
   out_6106065913523472774[45] = 0;
   out_6106065913523472774[46] = 0;
   out_6106065913523472774[47] = 0;
   out_6106065913523472774[48] = 0;
   out_6106065913523472774[49] = 0;
   out_6106065913523472774[50] = 0;
   out_6106065913523472774[51] = 0;
   out_6106065913523472774[52] = 0;
   out_6106065913523472774[53] = 0;
   out_6106065913523472774[54] = 0;
   out_6106065913523472774[55] = 0;
   out_6106065913523472774[56] = 1;
   out_6106065913523472774[57] = 0;
   out_6106065913523472774[58] = 0;
   out_6106065913523472774[59] = 0;
   out_6106065913523472774[60] = 0;
   out_6106065913523472774[61] = 0;
   out_6106065913523472774[62] = 0;
   out_6106065913523472774[63] = 0;
   out_6106065913523472774[64] = 0;
   out_6106065913523472774[65] = 0;
}
void h_33(double *state, double *unused, double *out_6825187964767546674) {
   out_6825187964767546674[0] = state[16];
   out_6825187964767546674[1] = state[17];
   out_6825187964767546674[2] = state[18];
}
void H_33(double *state, double *unused, double *out_6064648744804204507) {
   out_6064648744804204507[0] = 0;
   out_6064648744804204507[1] = 0;
   out_6064648744804204507[2] = 0;
   out_6064648744804204507[3] = 0;
   out_6064648744804204507[4] = 0;
   out_6064648744804204507[5] = 0;
   out_6064648744804204507[6] = 0;
   out_6064648744804204507[7] = 0;
   out_6064648744804204507[8] = 0;
   out_6064648744804204507[9] = 0;
   out_6064648744804204507[10] = 0;
   out_6064648744804204507[11] = 0;
   out_6064648744804204507[12] = 0;
   out_6064648744804204507[13] = 0;
   out_6064648744804204507[14] = 0;
   out_6064648744804204507[15] = 0;
   out_6064648744804204507[16] = 1;
   out_6064648744804204507[17] = 0;
   out_6064648744804204507[18] = 0;
   out_6064648744804204507[19] = 0;
   out_6064648744804204507[20] = 0;
   out_6064648744804204507[21] = 0;
   out_6064648744804204507[22] = 0;
   out_6064648744804204507[23] = 0;
   out_6064648744804204507[24] = 0;
   out_6064648744804204507[25] = 0;
   out_6064648744804204507[26] = 0;
   out_6064648744804204507[27] = 0;
   out_6064648744804204507[28] = 0;
   out_6064648744804204507[29] = 0;
   out_6064648744804204507[30] = 0;
   out_6064648744804204507[31] = 0;
   out_6064648744804204507[32] = 0;
   out_6064648744804204507[33] = 0;
   out_6064648744804204507[34] = 0;
   out_6064648744804204507[35] = 0;
   out_6064648744804204507[36] = 0;
   out_6064648744804204507[37] = 0;
   out_6064648744804204507[38] = 0;
   out_6064648744804204507[39] = 1;
   out_6064648744804204507[40] = 0;
   out_6064648744804204507[41] = 0;
   out_6064648744804204507[42] = 0;
   out_6064648744804204507[43] = 0;
   out_6064648744804204507[44] = 0;
   out_6064648744804204507[45] = 0;
   out_6064648744804204507[46] = 0;
   out_6064648744804204507[47] = 0;
   out_6064648744804204507[48] = 0;
   out_6064648744804204507[49] = 0;
   out_6064648744804204507[50] = 0;
   out_6064648744804204507[51] = 0;
   out_6064648744804204507[52] = 0;
   out_6064648744804204507[53] = 0;
   out_6064648744804204507[54] = 0;
   out_6064648744804204507[55] = 0;
   out_6064648744804204507[56] = 0;
   out_6064648744804204507[57] = 0;
   out_6064648744804204507[58] = 0;
   out_6064648744804204507[59] = 0;
   out_6064648744804204507[60] = 0;
   out_6064648744804204507[61] = 0;
   out_6064648744804204507[62] = 1;
   out_6064648744804204507[63] = 0;
   out_6064648744804204507[64] = 0;
   out_6064648744804204507[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_6287082876705174730) {
  H(in_vec, out_6287082876705174730);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_6622887547268195339) {
  err_fun(nom_x, delta_x, out_6622887547268195339);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_2469532870010074731) {
  inv_err_fun(nom_x, true_x, out_2469532870010074731);
}
void live_H_mod_fun(double *state, double *out_1372219795177703307) {
  H_mod_fun(state, out_1372219795177703307);
}
void live_f_fun(double *state, double dt, double *out_6471053790479580686) {
  f_fun(state,  dt, out_6471053790479580686);
}
void live_F_fun(double *state, double dt, double *out_8723779082052171387) {
  F_fun(state,  dt, out_8723779082052171387);
}
void live_h_4(double *state, double *unused, double *out_602150755429471006) {
  h_4(state, unused, out_602150755429471006);
}
void live_H_4(double *state, double *unused, double *out_1181153021740974696) {
  H_4(state, unused, out_1181153021740974696);
}
void live_h_9(double *state, double *unused, double *out_8053080118545079418) {
  h_9(state, unused, out_8053080118545079418);
}
void live_H_9(double *state, double *unused, double *out_6106065913523472774) {
  H_9(state, unused, out_6106065913523472774);
}
void live_h_10(double *state, double *unused, double *out_8952859443434322822) {
  h_10(state, unused, out_8952859443434322822);
}
void live_H_10(double *state, double *unused, double *out_8116439110641593908) {
  H_10(state, unused, out_8116439110641593908);
}
void live_h_12(double *state, double *unused, double *out_5876765162710571962) {
  h_12(state, unused, out_5876765162710571962);
}
void live_H_12(double *state, double *unused, double *out_7562411398783707692) {
  H_12(state, unused, out_7562411398783707692);
}
void live_h_35(double *state, double *unused, double *out_8882447461541958668) {
  h_35(state, unused, out_8882447461541958668);
}
void live_H_35(double *state, double *unused, double *out_9215205749443062111) {
  H_35(state, unused, out_9215205749443062111);
}
void live_h_32(double *state, double *unused, double *out_4113087374974639312) {
  h_32(state, unused, out_4113087374974639312);
}
void live_H_32(double *state, double *unused, double *out_2033190202040276390) {
  H_32(state, unused, out_2033190202040276390);
}
void live_h_13(double *state, double *unused, double *out_9058530126902937662) {
  h_13(state, unused, out_9058530126902937662);
}
void live_H_13(double *state, double *unused, double *out_2889039755446710196) {
  H_13(state, unused, out_2889039755446710196);
}
void live_h_14(double *state, double *unused, double *out_8053080118545079418) {
  h_14(state, unused, out_8053080118545079418);
}
void live_H_14(double *state, double *unused, double *out_6106065913523472774) {
  H_14(state, unused, out_6106065913523472774);
}
void live_h_33(double *state, double *unused, double *out_6825187964767546674) {
  h_33(state, unused, out_6825187964767546674);
}
void live_H_33(double *state, double *unused, double *out_6064648744804204507) {
  H_33(state, unused, out_6064648744804204507);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
